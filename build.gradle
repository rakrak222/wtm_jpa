plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.wtm'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.1'
    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

    // Jackson for JSON processing
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Querydsl dependencies
    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta" // 명시적으로 버전 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.0.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

}

def querydslDir = file("src/main/generated")

tasks.register("compileQuerydsl", JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.compileClasspath
    destinationDirectory = querydslDir
    options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('compileJava') {
    dependsOn tasks.named('compileQuerydsl')
}

tasks.named('clean') {
    doFirst {
        delete querydslDir
    }
}
// Test Task 설정
tasks.named('test') {
    useJUnitPlatform()
}
